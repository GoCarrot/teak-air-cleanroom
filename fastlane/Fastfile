# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
TEAK_APP_EXTENSIONS = ["TeakNotificationService", "TeakNotificationContent"]

#
# Configuration
#
CONFIG_TYPE = ENV.fetch('CONFIG_TYPE', 'development')
TEAK_AIR_CLEANROOM_BUNDLE_ID = ENV.fetch('TEAK_AIR_CLEANROOM_BUNDLE_ID', 'io.teak.app.air.dev')

USE_BUILTIN_AIR_NOTIFICATION_REGISTRATION = true
TEST_DISTRIQT = ENV.fetch('TEST_DISTRIQT', false)
TEST_DISTRIQT_NOTIF = ENV.fetch('TEST_DISTRIQT_NOTIF', false)

#
# Adobe AIR Helpers
#
ADOBE_AIR_HOME = ENV.fetch('ADOBE_AIR_HOME', '/usr/local/share/adobe-air-sdk')

def adt(*args)
  escaped_args = args.map { |arg| Shellwords.escape(arg) }.join(' ')
  sh "AIR_NOANDROIDFLAIR=true #{ADOBE_AIR_HOME}/bin/adt #{escaped_args}"
end

def amxmlc(*args)
  escaped_args = args.map { |arg| Shellwords.escape(arg) }.join(' ')
  sh "#{ADOBE_AIR_HOME}/bin/amxmlc #{escaped_args}"
end

#
# Lanes
#
default_platform(:ios)

desc "Copy or download the Teak SDK"
lane :sdk do
  version = teak_sdk(
    sdk: :air,
    destination: 'src/extensions/'
  )
  File.write(File.join("..", "TEAK_VERSION"), version)
end

platform :ios do
  lane :build do
    Helper::TeakHelper.with_credentials_for(TEAK_AIR_CLEANROOM_BUNDLE_ID) do |p12_file, p12_password, mobileprovision|
      Dir.chdir('..') do
        adt "-package", "-target", "ipa-debug", #"-embedBitcode", "yes",
          "-keystore", p12_file, "-storetype", "pkcs12", "-storepass", p12_password,
          "-provisioning-profile", mobileprovision,
          "build/teak-air-cleanroom.ipa", "src/app.xml", "src/mm.cfg", "-C", "build", "teak-air-cleanroom.swf",
          "-C", "src/build-assets", "teak-ea-icon-square-1024x1024.png", "teak-ea-icon-square-144x144.png",
          "Default@2x.png", "Default-568h@2x.png", "-extdir", "src/extensions"
        FileUtils.cp 'build/teak-air-cleanroom.ipa', 'teak-air-cleanroom.ipa'
      end
    end
  end
end

platform :android do
  lane :build do
    Helper::TeakHelper.with_kms_for("../kms/io.teak.app.air.jks.data",
                                    "../kms/store_encryption_key.key") do |file|
      Dir.chdir('..') do
        adt "-package", "-target", "apk-captive-runtime",
          "-keystore", file, "-storetype", "jks", "-alias", "dev", "-storepass", "pointless",
          "build/teak-air-cleanroom.apk", "src/app.xml", "src/mm.cfg", "-C", "build", "teak-air-cleanroom.swf",
          "-C", "src/build-assets", "teak-ea-icon-square-1024x1024.png", "teak-ea-icon-square-144x144.png",
          "Default@2x.png", "Default-568h@2x.png", "api_key.txt", "-extdir", "src/extensions"
      end
    end
  end

  lane :repack do
    #
    # Future-Pat: __FILE__ seems to not work in Fastfile
    #
    project_path = File.join(Dir.pwd, '..')

    Helper::TeakHelper.with_kms_for("../kms/io.teak.app.air.jks.data",
                                    "../kms/store_encryption_key.key") do |file|
      config_path = File.join(project_path, 'src', 'air-repack.config')

      File.write(config_path, """
android.build-tools = /usr/local/share/android-sdk/build-tools/25.0.2/
android.platform-tools = /usr/local/share/android-sdk/platform-tools/

temp.path = #{File.join(project_path, 'build', '_apktemp')}
temp.apk = #{File.join(project_path, 'build', '_temp.apk')}

input.apk = #{File.join(project_path, 'build', 'teak-air-cleanroom.apk')}
output.apk = #{File.join(project_path, 'teak-air-cleanroom.apk')}

debug.storetype = jks
debug.keystore = #{file}
debug.keypass = pointless
debug.alias = dev

release.storetype = jks
release.keystore = #{file}
release.keypass = pointless
release.alias = dev
""")

      Dir.chdir('../../teak-air/android/repacker/') do
        `ant -Duse-config=#{config_path} unpack patch`
        FileUtils.cp_r "#{File.join(project_path, 'src', 'res')}", "#{File.join(project_path, 'build', '_apktemp')}"
        #FileUtils.cp_r "#{File.join(project_path, 'src', 'assets')}", "#{File.join(project_path, 'build', '_apktemp')}"
        `ant -Duse-config=#{config_path} repack debug_sign zipalign`
      end
    end
  end
end
